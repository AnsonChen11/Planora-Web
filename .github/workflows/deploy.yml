name: Deploy Planora Web to Azure VM


on:
  push:
    branches:
      - main
      - "dev_*"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/planora-web:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/planora-web:latest

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Docker container on Azure VM
        run: |
          echo "${{ secrets.AZURE_VM_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem 
          ssh -t -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_IP }} << EOF
            # Determine the port to use based on the branch
            echo "Current branch: \${GITHUB_REF##*/}"
            if [ "${{ github.ref }}" == "refs/heads/main" ]; then
              PORT=8080
              API_URL="${{ secrets.PROD_API_URL }}"
            elif [[ "${{ github.ref }}" == refs/heads/dev_* ]]; then
              PORT=${{ secrets.DEV_PORT }}
              API_URL="${{ secrets.DEV_API_URL }}"
            fi
            
            echo "Stopping existing container if it exists..."
            RUNNING_CONTAINER=\$(sudo docker ps -q --filter "ancestor=${{ secrets.DOCKER_USERNAME }}/planora-web:latest")
            if [ ! -z "\$RUNNING_CONTAINER" ]; then
              sudo docker stop \$RUNNING_CONTAINER
              sudo docker rm \$RUNNING_CONTAINER
            fi

            echo "Pulling the latest Docker image..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/planora-web:latest

            echo "Running the Docker container on port \$PORT..."
            sudo docker run -d -p \$PORT:3000 \
              -e REACT_APP_API_URL=\$API_URL \
              ${{ secrets.DOCKER_USERNAME }}/planora-web:latest
          EOF
